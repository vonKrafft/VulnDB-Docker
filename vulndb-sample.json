[{"uuid":"6ce193c1-6a52-4f89-898a-851b14546172","title":"A1:2017 - Injection","owasp":"A1:2017 - Injection","description":"Les injections, telles que l'injection SQL, NoSQL, OS et LDAP, se produisent lorsque des données non fiables sont envoyées à un interpréteur dans le cadre d'une commande ou d'une requête. Les données malveillantes de l'attaquant peuvent inciter l'interprète à exécuter des commandes non intentionnelles ou à accéder à des données sans autorisation appropriée.","consequences":"","recommendations":"","language":"FR"},{"uuid":"aefb49a2-eb96-493a-a642-83f76aca6b25","title":"A2:2017 - Broken Authentication","owasp":"A2:2017 - Broken Authentication","description":"Les fonctions d'application liées à l'authentification et à la gestion des sessions sont souvent implémentées de manière incorrecte, permettant aux attaquants de compromettre les mots de passe, les clés ou les jetons de session, ou d'exploiter d'autres failles d'implémentation afin d’usurper l'identité des autres utilisateurs, de façon temporaire ou permanente.","consequences":"","recommendations":"","language":"FR"},{"uuid":"1b012c2c-5022-4bdd-9070-324657e9e8db","title":"A3:2017 - Sensitive Data Exposure","owasp":"A3:2017 - Sensitive Data Exposure","description":"De nombreuses applications Web et API ne protègent pas correctement les données sensibles, telles que les données financières, les soins de santé et les données personnelles. Les attaquants peuvent voler ou modifier ces données faiblement protégées pour commettre une fraude par carte de crédit, un vol d’identité ou d’autres infractions. Les données sensibles peuvent être compromises sans protection supplémentaire, telle que le chiffrement des données stockées ou transmises, et nécessitent des précautions particulières lorsqu'elles sont échangées avec le navigateur.","consequences":"","recommendations":"","language":"FR"},{"uuid":"cb6ad3a2-1686-45d8-b0a0-cc2481d8cee9","title":"A4:2017 - XML External Entities (XXE)","owasp":"A4:2017 - XML External Entities (XXE)","description":"De nombreux analyseurs XML, anciens ou mal configurés, évaluent les références aux entités externes au sein de documents XML. Les entités externes peuvent être utilisées pour lire des fichiers locaux à l'aide du gestionnaire de fichiers URI, des partages de fichiers internes, de l'analyse du port interne, de l'exécution de code à distance et des attaques par déni de service.","consequences":"","recommendations":"","language":"FR"},{"uuid":"def52391-10ac-4ce9-8c68-5f3f38686f23","title":"A5:2017 - Broken Access Control","owasp":"A5:2017 - Broken Access Control","description":"Les restrictions sur ce que les utilisateurs authentifiés sont autorisés à faire ne sont souvent pas correctement appliquées. Les attaquants peuvent exploiter ces vulnérabilités pour accéder à des fonctionnalités et/ou à des données non autorisées, telles qu'accéder aux comptes d'autres utilisateurs, afficher des fichiers sensibles, modifier les données d'autres utilisateurs, modifier les droits d'accès, etc.","consequences":"","recommendations":"","language":"FR"},{"uuid":"b57b6415-c86d-485c-b929-8995815ce73e","title":"A6:2017 - Security Misconfiguration","owasp":"A6:2017 - Security Misconfiguration","description":"Le problème le plus souvent rencontré est une mauvaise configuration de la sécurité. Cela est généralement dû à des configurations par défaut non sécurisées, à des configurations incomplètes ou ad-hoc, à un stockage ouvert sur Internet (cloud), à des en-têtes HTTP mal configurés et à des messages d'erreur détaillés contenant des informations sensibles. Tous les systèmes d'exploitation, infrastructures, bibliothèques et applications doivent non seulement être configurés de manière sécurisée, mais ils doivent également être mis à jour rapidement.","consequences":"","recommendations":"","language":"FR"},{"uuid":"186bd8b1-9803-48bd-8554-d8685e018aa5","title":"A7:2017 - Cross-Site Scripting (XSS)","owasp":"A7:2017 - Cross-Site Scripting (XSS)","description":"Des failles XSS se produisent chaque fois qu'une application inclut des données non fiables dans une nouvelle page Web sans validation ou échappement correct, ou met à jour une page Web existante avec des données fournies par l'utilisateur à l'aide d'une API de navigateur pouvant créer du HTML ou du JavaScript. Les XSS permettent aux attaquants d'exécuter des scripts dans le navigateur de la victime, ce qui peut détourner des sessions utilisateur, altérer des sites Web ou rediriger l'utilisateur vers des sites malveillants.","consequences":"","recommendations":"","language":"FR"},{"uuid":"12a36a77-94c8-44cf-b100-5c6d0b37ccb9","title":"A8:2017 - Insecure Deserialization","owasp":"A8:2017 - Insecure Deserialization","description":"Une désérialisation non sécurisée conduit souvent à l'exécution de code à distance. Même si les failles de désérialisation n'entraînent pas l'exécution de code à distance, elles peuvent être utilisées pour effectuer des attaques, notamment des attaques par rejeu, des attaques par injection et des attaques par élévation de privilèges.","consequences":"","recommendations":"","language":"FR"},{"uuid":"20eca8dc-88fd-4300-a25d-eda7a19a6100","title":"A9:2017 - Using Components with Known Vulnerabilities","owasp":"A9:2017 - Using Components with Known Vulnerabilities","description":"Les composants, tels que les bibliothèques, les Framework et d'autres modules logiciels, s'exécutent avec les mêmes privilèges que l'application. Si un composant vulnérable est exploité, une telle attaque peut faciliter la perte de données ou la prise de contrôle de serveur. Les applications et les API utilisant des composants avec des vulnérabilités connues peuvent saper les défenses des applications et permettre diverses attaques et impacts.","consequences":"","recommendations":"","language":"FR"},{"uuid":"762d3369-28f8-472e-b696-12a076469578","title":"A10:2017 - Insufficient Logging & Monitoring","owasp":"A10:2017 - Insufficient Logging & Monitoring","description":"Une journalisation et une surveillance insuffisantes, associées à une intégration manquante ou inefficace avec la réponse à un incident, permettent aux attaquants d’attaquer davantage les systèmes, de maintenir la persistance, de faire pivoter un plus grand nombre de systèmes et d’altérer, d’extraire ou de détruire des données. La plupart des études sur les cyber-attaques indiquent que le temps nécessaire pour détecter une violation est supérieur à 200 jours, généralement détecté par des tiers plutôt que par une surveillance interne.","consequences":"","recommendations":"","language":"FR"},{"uuid":"cb4f5e2d-6777-4121-8fe0-300b06e4cc6f","title":"A1:2017 - Injection","owasp":"A1:2017 - Injection","description":"Injection flaws, such as SQL, NoSQL, OS, and LDAP injection, occur when untrusted data is sent to an interpreter as part of a command or query. The attacker's hostile data can trick the interpreter into executing unintended commands or accessing data without proper authorization.","consequences":"","recommendations":"","language":"EN"},{"uuid":"cb4a6cee-fa84-4b52-8ec4-d2fe1a1826fa","title":"A2:2017 - Broken Authentication","owasp":"A2:2017 - Broken Authentication","description":"Application functions related to authentication and session management are often implemented incorrectly, allowing attackers to compromise passwords, keys, or session tokens, or to exploit other implementation flaws to assume other users' identities temporarily or permanently.","consequences":"","recommendations":"","language":"EN"},{"uuid":"9025a7ff-bed4-4270-a0fc-434a3b9c6901","title":"A3:2017 - Sensitive Data Exposure","owasp":"A3:2017 - Sensitive Data Exposure","description":"Many web applications and APIs do not properly protect sensitive data, such as financial, healthcare, and PII. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes. Sensitive data may be compromised without extra protection, such as encryption at rest or in transit, and requires special precautions when exchanged with the browser.","consequences":"","recommendations":"","language":"EN"},{"uuid":"d341d1d3-e56e-4b1a-8164-f67f57752926","title":"A4:2017 - XML External Entities (XXE)","owasp":"A4:2017 - XML External Entities (XXE)","description":"Many older or poorly configured XML processors evaluate external entity references within XML documents. External entities can be used to disclose internal files using the file URI handler, internal file shares, internal port scanning, remote code execution, and denial of service attacks.","consequences":"","recommendations":"","language":"EN"},{"uuid":"a6726da5-c499-468c-bc5a-a8a9e4f469ce","title":"A5:2017 - Broken Access Control","owasp":"A5:2017 - Broken Access Control","description":"Restrictions on what authenticated users are allowed to do are often not properly enforced. Attackers can exploit these flaws to access unauthorized functionality and/or data, such as access other users' accounts, view sensitive files, modify other users' data, change access rights, etc.","consequences":"","recommendations":"","language":"EN"},{"uuid":"35958c23-10f0-4625-9de2-6c6765988981","title":"A6:2017 - Security Misconfiguration","owasp":"A6:2017 - Security Misconfiguration","description":"Security misconfiguration is the most commonly seen issue. This is commonly a result of insecure default configurations, incomplete or ad hoc configurations, open cloud storage, misconfigured HTTP headers, and verbose error messages containing sensitive information. Not only must all operating systems, frameworks, libraries, and applications be securely configured, but they must be patched/upgraded in a timely fashion.","consequences":"","recommendations":"","language":"EN"},{"uuid":"cf7d7eba-2d1e-443c-a371-261cb8b792c0","title":"A7:2017 - Cross-Site Scripting (XSS)","owasp":"A7:2017 - Cross-Site Scripting (XSS)","description":"XSS flaws occur whenever an application includes untrusted data in a new web page without proper validation or escaping, or updates an existing web page with user-supplied data using a browser API that can create HTML or JavaScript. XSS allows attackers to execute scripts in the victim's browser which can hijack user sessions, deface web sites, or redirect the user to malicious sites.","consequences":"","recommendations":"","language":"EN"},{"uuid":"0f718426-05fb-47f6-908e-d25cddc99cad","title":"A8:2017 - Insecure Deserialization","owasp":"A8:2017 - Insecure Deserialization","description":"Insecure deserialization often leads to remote code execution. Even if deserialization flaws do not result in remote code execution, they can be used to perform attacks, including replay attacks, injection attacks, and privilege escalation attacks.","consequences":"","recommendations":"","language":"EN"},{"uuid":"82082850-0999-4186-80cd-2414681ba6f9","title":"A9:2017 - Using Components with Known Vulnerabilities","owasp":"A9:2017 - Using Components with Known Vulnerabilities","description":"Components, such as libraries, frameworks, and other software modules, run with the same privileges as the application. If a vulnerable component is exploited, such an attack can facilitate serious data loss or server takeover. Applications and APIs using components with known vulnerabilities may undermine application defenses and enable various attacks and impacts.","consequences":"","recommendations":"","language":"EN"},{"uuid":"34d22e4d-725b-4a42-a904-354c15966a6c","title":"A10:2017 - Insufficient Logging & Monitoring","owasp":"A10:2017 - Insufficient Logging & Monitoring","description":"Insufficient logging and monitoring, coupled with missing or ineffective integration with incident response, allows attackers to further attack systems, maintain persistence, pivot to more systems, and tamper, extract, or destroy data. Most breach studies show time to detect a breach is over 200 days, typically detected by external parties rather than internal processes or monitoring.","consequences":"","recommendations":"","language":"EN"},{"uuid":"78c45aa1-645f-46e5-897f-ff36e41d794a","title":"Bienvenue sur VulnDB","owasp":"A0:Sample","description":"Si vous pouvez lire ceci, cela signifie que le container Docker NodeJS tournent et que les répertoires et leur contenu ont été correctement créés avec les privilèges adéquats. **Que faire à présent ?**\n- Vous pouvez créer de nouveaux templates en cliquant sur `Add` en haut à droite\n- À coté, vous trouvez les boutons suivants :\n    - `Export` pour télécharger le fichier JSON dans lequel sont stockées toutes les données\n    - `Stats` afin de visualiser des statistiques sur la liste des templates (répartition par langue FR/EN et par catégories OWASP)\n- Pour modifier un template, utilisez le bouton `Edit` à droite du titre\n- Vous pouvez rapidement copier l'URL du template à l'aide de l'icône _permalink_ à droite du titre\n- Pour supprimer un template, utilisez le bouton `Delete` en bas du formulaire d'édition\n\nSi vous avez des questions ou des remarques, faites un tour sur le [GitHub](https://github.com/vonKrafft/VulnDB-Docker) du projet :)","consequences":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas in porta dolor. Fusce luctus ac dui et tincidunt. Cras sit amet leo lacus. Vivamus in lobortis mi. Praesent non augue quis nibh fermentum aliquam. Etiam pellentesque augue sit amet quam accumsan mollis. Suspendisse potenti. Donec luctus posuere consequat. Duis pharetra est eu dui volutpat pulvinar. Aliquam sit amet tempor libero, quis fringilla risus. Fusce risus sem, consectetur quis vestibulum quis, faucibus molestie diam.\n\nQuisque tristique est enim, hendrerit sagittis eros commodo ac. Maecenas nibh erat, ornare et scelerisque id, malesuada eget quam. Sed imperdiet, sapien non auctor condimentum, lectus arcu molestie ligula, vel rutrum orci libero sed lacus.\n\nQuisque faucibus risus quis est egestas, gravida finibus ex euismod. Donec malesuada, libero sit amet molestie luctus, massa magna luctus augue, a eleifend eros nibh vitae nibh. Sed ultricies quam nec sem luctus, sit amet accumsan sem cursus.","recommendations":"Vivamus quis tempor neque, condimentum maximus augue. Ut malesuada dolor sit amet justo viverra, vel placerat justo tincidunt. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Sed commodo urna fermentum dolor iaculis, quis dapibus arcu lacinia. Aliquam erat volutpat. Proin non orci est. Vivamus laoreet mattis magna, quis blandit neque. ","language":"FR"},{"uuid":"39987e9b-38f8-4f54-aabf-2dafeee7d233","title":"Welcome to VulnDB","owasp":"A0:Sample","description":"If you can read this, it means that the NodeJS Docker container is running and that the directories and their contents have been correctly created with the appropriate privileges. **What to do now?**\n- You can create new templates by clicking `Add` at the top right\n- Next to it, you find the following buttons:\n    - `Export` to download the JSON file in which all data is stored\n    - `Stats` to view statistics on the list of templates (distribution by language and OWASP categories)\n- To modify a template, use the `Edit` button to the right of the title\n- You can quickly copy the template's URL using the _permalink_ icon next to the template's title\n- To delete a template, use the `Delete` button at the bottom of the edit form\n\nIf you have any questions or feedbacks, take a look at the project's on [GitHub](https://github.com/vonKrafft/VulnDB-Docker) :)","consequences":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas in porta dolor. Fusce luctus ac dui et tincidunt. Cras sit amet leo lacus. Vivamus in lobortis mi. Praesent non augue quis nibh fermentum aliquam. Etiam pellentesque augue sit amet quam accumsan mollis. Suspendisse potenti. Donec luctus posuere consequat. Duis pharetra est eu dui volutpat pulvinar. Aliquam sit amet tempor libero, quis fringilla risus. Fusce risus sem, consectetur quis vestibulum quis, faucibus molestie diam.\n\nQuisque tristique est enim, hendrerit sagittis eros commodo ac. Maecenas nibh erat, ornare et scelerisque id, malesuada eget quam. Sed imperdiet, sapien non auctor condimentum, lectus arcu molestie ligula, vel rutrum orci libero sed lacus.\n\nQuisque faucibus risus quis est egestas, gravida finibus ex euismod. Donec malesuada, libero sit amet molestie luctus, massa magna luctus augue, a eleifend eros nibh vitae nibh. Sed ultricies quam nec sem luctus, sit amet accumsan sem cursus.","recommendations":"Vivamus quis tempor neque, condimentum maximus augue. Ut malesuada dolor sit amet justo viverra, vel placerat justo tincidunt. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Sed commodo urna fermentum dolor iaculis, quis dapibus arcu lacinia. Aliquam erat volutpat. Proin non orci est. Vivamus laoreet mattis magna, quis blandit neque. ","language":"EN"}]